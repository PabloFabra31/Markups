* Fig A.1 Output elasticities:
xtset id time, yearly
gen lns = ln(sale_D)
gen v = ln(cogs_D)
gen lnk = ln(capital_D)
gen Investment = capital_D-.9*L.capital_D
gen lni = ln(Investment)
gen lnk2 = lnk^2
gen lni2 = lni^2
gen lnk3 = lnk^3
gen lni3 = lni^3
gen lnki = lnk*lni
gen theta_op 	= .
egen nrind = group(ind2d)
forvalues t=1972/2016 {
forvalue  s = 1/23 {
reg lns v lni lni2 lni3 lnk lnk2 lnk3 lnki share_firm if year==`t' & nrind==`s'
replace theta_op = _b[v] if year==`t' & nrind==`s'
}
}


#DLE
gen log_k2 = log_k_pim^2
gen log_i2 = log_inv^2
gen log_k3 = log_k_pim^3
gen log_i3 = log_inv^3
gen log_ki = log_k_pim*log_i
gen theta_op 	= .
egen nrind = group(nace2)
levelsof indcode, local(levels)

forvalues t = 1996/2020 {
    foreach s of local levels {
        reg log_go log_m log_l log_inv log_i2 log_i3 log_k_pim log_k2 log_k3 log_ki market_share if time == `t' & nrind == `s'
        replace theta_op = _b[v] if time == `t' & nrind == `s'
    }
}



#DLE in Granularity paper code
g elast_m = 0
g elast_l = 0
g elast_k = 0
g eps_cd = 0
save "$Pthout/Markups2/data.dta", replace
levelsof indcode, local(levels)
foreach s of local levels {
use "$Pthout/Markups2/data.dta", clear

keep if nace2 == `s'
 
xtset unique_id time
qui prodest log_go, free(log_m log_bill) proxy(log_i) state(log_k_pim) met (op) acf reps(3) trans id(unique_id) t(time) fsres(tempeps_cd) 
qui replace eps_cd = tempeps_cd if indcode  == `s'
qui drop tempeps_cd
qui replace elast_m = _b[log_m] if indcode  == `s' & eps_cd ~= . 	
replace elast_l = _b[log_bill]
replace elast_k= _b[log_k_pim]
g markup = elast_m*(1/exp(eps_cd))*(go/m) if eps_cd ~= .  
save "$Pthout/Markups2/mkp_est_s`s'.dta", replace
}





foreach s of local levels {
    display `s' 

    use "$Pthout/Markups2/data.dta", clear

    keep if nace2 == "`s'"
xtset unique_id time
qui prodest log_go, free(log_m log_bill) proxy(log_i) state(log_k_pim) met (op) acf reps(3) trans id(unique_id) t(time) fsres(tempeps_cd) 
qui replace eps_cd = tempeps_cd if indcode  == `s'
		qui drop tempeps_cd
		qui replace elast_m = _b[log_m] if indcode  == `s' & eps_cd ~= . 	
replace elast_l = _b[log_bill]
replace elast_k= _b[log_k_pim]
g markup = elast_m*(1/exp(eps_cd))*(go/m) if eps_cd ~= .  
save "$Pthout/Markups2/mkp_est_s`s'.dta", replace
}



levelsof indcode, local(levels)

foreach s of local levels {
   qui count if nace2 == `s'
   if r(N) > 0 {
      use "$Pthout/Markups2/data.dta", clear
      keep if nace2 == `s'

      xtset unique_id time

      capture qui prodest log_go, free(log_m log_bill) proxy(log_i) state(log_k_pim) met (op) acf reps(3) trans id(unique_id) t(time) fsres(tempeps_cd)
      if _rc == 0 {
         qui replace eps_cd = tempeps_cd if indcode  == `s'
         qui drop tempeps_cd
         qui replace elast_m = _b[log_m] if indcode  == `s' & eps_cd ~= . 	
         replace elast_l = _b[log_bill]
         replace elast_k = _b[log_k_pim]
         g markup = elast_m*(1/exp(eps_cd))*(go/m) if eps_cd ~= .  

         save "$Pthout/Markups2/mkp_est_s`s'.dta", replace
      }
   }
}



local all_levels

foreach s in `levels' {
    use "$Pthout/Markups2/data.dta", clear

    keep if nace2 == `s'
    
    xtset unique_id time
    qui prodest log_go, free(log_m log_bill) proxy(log_i) state(log_k_pim) met(op) acf reps(3) trans id(unique_id) t(time) fsres(tempeps_cd) 
    qui replace eps_cd = tempeps_cd if indcode == `s'
    qui drop tempeps_cd
    qui replace elast_m = _b[log_m] if indcode == `s' & eps_cd ~= .    
    replace elast_l = _b[log_bill]
    replace elast_k = _b[log_k_pim]
    g markup = elast_m * (1/exp(eps_cd)) * (go/m) if eps_cd ~= .  
    
    save "$Pthout/Markups2/mkp_est_s`s'.dta", replace

    local all_levels "`all_levels' `s'" 
}

local levels "`all_levels'"

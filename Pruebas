* Fig A.1 Output elasticities:
xtset id time, yearly
gen lns = ln(sale_D)
gen v = ln(cogs_D)
gen lnk = ln(capital_D)
gen Investment = capital_D-.9*L.capital_D
gen lni = ln(Investment)
gen lnk2 = lnk^2
gen lni2 = lni^2
gen lnk3 = lnk^3
gen lni3 = lni^3
gen lnki = lnk*lni
gen theta_op 	= .
egen nrind = group(ind2d)
forvalues t=1972/2016 {
forvalue  s = 1/23 {
reg lns v lni lni2 lni3 lnk lnk2 lnk3 lnki share_firm if year==`t' & nrind==`s'
replace theta_op = _b[v] if year==`t' & nrind==`s'
}
}


#DLE
gen log_k2 = log_k_pim^2
gen log_i2 = log_inv^2
gen log_k3 = log_k_pim^3
gen log_i3 = log_inv^3
gen log_ki = log_k_pim*log_i
gen theta_op 	= .
egen nrind = group(nace2)
levelsof indcode, local(levels)

forvalues t = 1996/2020 {
    foreach s of local levels {
        reg log_go log_m log_l log_inv log_i2 log_i3 log_k_pim log_k2 log_k3 log_ki market_share if time == `t' & nrind == `s'
        replace theta_op = _b[v] if time == `t' & nrind == `s'
    }
}



#DLE in Granularity paper code
g elast_m = 0
g elast_l = 0
g elast_k = 0
g eps_cd = 0
save "$Pthout/Markups2/data.dta", replace
levelsof indcode, global(levels)
foreach s of global levels {
use "$Pthout/Markups2/data.dta", clear

keep if nace2 == `s'
 
xtset unique_id time
qui prodest log_go, free(log_m log_bill) proxy(log_i) state(log_k_pim) met (op) acf reps(3) trans id(unique_id) t(time) fsres(tempeps_cd) 
qui replace eps_cd = tempeps_cd if indcode  == `s'
qui drop tempeps_cd
qui replace elast_m = _b[log_m] if indcode  == `s' & eps_cd ~= . 	
replace elast_l = _b[log_bill]
replace elast_k= _b[log_k_pim]
g markup = elast_m*(1/exp(eps_cd))*(go/m) if eps_cd ~= .  
save "$Pthout/Markups2/mkp_est_s`s'.dta", replace
}





foreach s of local levels {
    display `s' 

    use "$Pthout/Markups2/data.dta", clear

    keep if nace2 == "`s'"
xtset unique_id time
qui prodest log_go, free(log_m log_bill) proxy(log_i) state(log_k_pim) met (op) acf reps(3) trans id(unique_id) t(time) fsres(tempeps_cd) 
qui replace eps_cd = tempeps_cd if indcode  == `s'
		qui drop tempeps_cd
		qui replace elast_m = _b[log_m] if indcode  == `s' & eps_cd ~= . 	
replace elast_l = _b[log_bill]
replace elast_k= _b[log_k_pim]
g markup = elast_m*(1/exp(eps_cd))*(go/m) if eps_cd ~= .  
save "$Pthout/Markups2/mkp_est_s`s'.dta", replace
}



levelsof indcode, local(levels)

foreach s of local levels {
   qui count if nace2 == `s'
   if r(N) > 0 {
      use "$Pthout/Markups2/data.dta", clear
      keep if nace2 == `s'

      xtset unique_id time

      capture qui prodest log_go, free(log_m log_bill) proxy(log_i) state(log_k_pim) met (op) acf reps(3) trans id(unique_id) t(time) fsres(tempeps_cd)
      if _rc == 0 {
         qui replace eps_cd = tempeps_cd if indcode  == `s'
         qui drop tempeps_cd
         qui replace elast_m = _b[log_m] if indcode  == `s' & eps_cd ~= . 	
         replace elast_l = _b[log_bill]
         replace elast_k = _b[log_k_pim]
         g markup = elast_m*(1/exp(eps_cd))*(go/m) if eps_cd ~= .  

         save "$Pthout/Markups2/mkp_est_s`s'.dta", replace
      }
   }
}


levelsof indcode, local(levels)
local all_levels

foreach s in `levels' {
    use "$Pthout/Markups2/data.dta", clear

    keep if nace2 == `s'
    
    xtset unique_id time
    qui prodest log_go, free(log_m log_bill) proxy(log_i) state(log_k_pim) met(lp) acf reps(3) trans id(unique_id) t(time) fsres(tempeps_cd) 
    qui replace eps_cd = tempeps_cd if indcode == `s'
    qui drop tempeps_cd
    qui replace elast_m = _b[log_m] if indcode == `s' & eps_cd ~= .    
qui replace elast_l = _b[log_bill] if indcode == `s'
    replace elast_k = _b[log_k_pim] if indcode == `s'
    g markup = elast_m * (1/exp(eps_cd)) * (go/m) if eps_cd ~= .  
    
    save "$Pthout/Markups3/mkp_est_s`s'.dta", replace

    local all_levels "`all_levels' `s'" 
}

local levels "`all_levels'"


*EL BUENO*

local all_levels

foreach s in `levels' {
    use "$Pthout/Markups2/data.dta", clear

    keep if nace2 == `s'
    
    xtset unique_id time
    qui prodest log_go, free(log_m log_bill) proxy(log_i) state(log_k_pim) met(op) acf reps(3) trans id(unique_id) t(time) fsres(tempeps_cd) 
    qui replace eps_cd = tempeps_cd if indcode == `s'
    qui drop tempeps_cd
    qui replace elast_m = _b[log_m] if indcode == `s' & eps_cd ~= .    
    replace elast_l = _b[log_bill]
    replace elast_k = _b[log_k_pim]
    g markup = elast_m * (1/exp(eps_cd)) * (go/m) if eps_cd ~= .  
    
    save "$Pthout/Markups2/mkp_est_s`s'.dta", replace

    local all_levels "`all_levels' `s'" 
}

local levels "`all_levels'" 










global all_levels ""

foreach s in `levels' {
    use "$Pthout/Markups2/data.dta", clear

    keep if nace2 == `s'
    
    xtset unique_id time
    qui prodest log_go, free(log_m log_bill) proxy(log_i) state(log_k_pim) met(op) acf reps(3) trans id(unique_id) t(time) fsres(tempeps_cd) 
    qui replace eps_cd = tempeps_cd if indcode == `s'
    qui drop tempeps_cd
    qui replace elast_m = _b[log_m] if indcode == `s' & eps_cd ~= .    
    replace elast_l = _b[log_bill]
    replace elast_k = _b[log_k_pim]
    g markup = elast_m * (1/exp(eps_cd)) * (go/m) if eps_cd ~= .  
    
    save "$Pthout/Markups2/mkp_est_s`s'.dta", replace

    global all_levels "$all_levels `s'" 
}

local levels "`all_levels'"




*****BUENOOOOOOO*******
*No funciona la 82, comprobar.
use "$Pthout/Markups2/data.dta", clear

levelsof nace2, local(nace2_values)

di "`nace2_values'"





**Sin eliminar 
ssc install winsor2
ssc install fs

global Pthout "C:/Users/User/OneDrive - Universitat Jaume I/Economía/Beca Colaboración/Stata"
global PthEst "C:/Users/User/OneDrive - Universitat Jaume I/Economía/Beca Colaboración/Stata/Markups"
use "$Pthout/input_data_correct.dta", clear

gen indcode = nace2
egen unique_id = group(id)
xtset unique_id time
drop if nace2 == 5
save "$Pthout/input_data_correct.dta", replace

g cogssale = m/go
g totexp = m+bill
g totexpsale = totexp/go

* winsorize ratios
winsor2 cogssale, replace cuts(1 99) 
winsor2 totexpsale, replace cuts(1 99) 
gen elast_m = 0
gen elast_l = 0
gen elast_k = 0
gen eps_cd = 0
rename i inv
gen lag_m = l.m
gen lag_l = l.bill
local varlist go va bill m inv k k_pim emp age lag_m lag_l
foreach var of local varlist {
gen log_`var' = log(`var')

}
save "$Pthout/Markups3/data.dta", replace

duplicates report unique_id time



use "$Pthout/Markups3/data.dta", clear
levelsof nace2, local(nace2_values)
foreach s in `nace2_values' {
    use "$Pthout/Markups3/data.dta" if nace2 == `s', clear

    xtset unique_id time
    qui prodest log_go, free(log_m log_bill) proxy(log_lag_m) state(log_k_pim) met(op) acf attrition reps(3) id(unique_id) t(time) fsres(tempeps_cd) 
    qui replace eps_cd = tempeps_cd if indcode == `s'
    qui drop tempeps_cd
    qui replace elast_m = _b[log_m] if indcode == `s' & eps_cd ~= .    
    replace elast_l = _b[log_bill]
    replace elast_k = _b[log_k_pim]
    g markup = elast_m * (1/exp(eps_cd)) * (go/m) if eps_cd ~= . 

    save "$Pthout/Markups3/mkp_est_s`s'.dta", replace
}

cd "C:\Users\User\OneDrive - Universitat Jaume I\Economía\Beca Colaboración\Stata\Markups3"

fs mkp_est_s*.dta

append using `r(files)'

save "data_markups10r.dta", replace

ssc install winsor2
winsor2 markup, replace cuts(1 99) 
summarize markup, detail

gen markdown = (elast_l/markup)*(go/bill)
winsor2 markdown, replace cuts(1 99)

#power law
gsort - markup
gen ranking = _n
gen log_rank = log(ranking)
gen log_markup = log(markup)
scatter log_rank log_markup

winsor2 markdown, replace cuts(1 99)
gsort - markdown
gen rankingd = _n
gen log_rankd = log(rankingd)
gen log_markdown = log(markdown)
scatter log_rankd log_markdown



summarize markup, detail
drop if markup<r(p1) | markup>r(p99)


egen total_go = total(go), by(time nace2)
gen market_share = go / total_go


gen reciprocal_markup = 1 / markup

gen weighted_value = market_share * reciprocal_markup

egen total_weighted_value = total(weighted_value), by(time)

egen total_market_share = total(market_share), by(time)

gen weighted_harmonic_average = total_weighted_value / total_market_share

drop reciprocal_markup weighted_value total_weighted_value total_market_share




*AGGREGATES
egen agtotal_go = total(go), by(time)
gen ag_share = go / agtotal_go


gen inv_markup = 1 / markup

gen weighted_inv_markup = inv_markup * ag_share

by time, sort: egen sum_ag_share = total(ag_share)
by time, sort: egen sum_weighted_inv_markup = total(weighted_inv_markup)
gen harmonic_mean = sum_ag_share / sum_weighted_inv_markup

bys nace2: markupest mkupACF_translog, method(dlw) output(log_go) inputvar(log_bill log_m) free(log_m) state(log_k_pim) proxy(log_lag_m log_lag_l) prodestopt("poly(3) acf trans")
















use "$Pthout/Markups3/data.dta", clear
levelsof nace2, local(nace2_values)
foreach s in `nace2_values' {
    use "$Pthout/Markups3/data.dta" if nace2 == `s', clear

    xtset unique_id time
    qui prodest log_go, free(log_m log_bill) proxy(log_lag_m) state(log_k_pim) met(op) acf attrition reps(3) id(unique_id) t(time) fsres(tempeps_cd) 
    qui replace eps_cd = tempeps_cd if indcode == `s'
    qui drop tempeps_cd
    qui replace elast_m = _b[log_m] if indcode == `s' & eps_cd ~= .    
    replace elast_l = _b[log_bill]
    replace elast_k = _b[log_k_pim]
    g markup = elast_m * (1/exp(eps_cd)) * (go/m) if eps_cd ~= . 

    save "$Pthout/Markups3/mkp_est_s`s'.dta", replace
}

cd "C:\Users\User\OneDrive - Universitat Jaume I\Economía\Beca Colaboración\Stata\Markups3"

fs mkp_est_s*.dta

append using `r(files)'

save "data_markupscobdatrilagmopacf.dta", replace






use "$Pthout/Markups3/data.dta", clear
levelsof nace2, local(nace2_values)
foreach s in `nace2_values' {
    use "$Pthout/Markups3/data.dta" if nace2 == `s', clear

    xtset unique_id time
    qui prodest log_go, free(log_m log_bill) proxy(log_lag_m) state(log_k_pim) met(lp) acf attrition reps(3) id(unique_id) t(time) fsres(tempeps_cd) 
    qui replace eps_cd = tempeps_cd if indcode == `s'
    qui drop tempeps_cd
    qui replace elast_m = _b[log_m] if indcode == `s' & eps_cd ~= .    
    replace elast_l = _b[log_bill]
    replace elast_k = _b[log_k_pim]
    g markup = elast_m * (1/exp(eps_cd)) * (go/m) if eps_cd ~= . 

    save "$Pthout/Markups3/mkp_est_s`s'.dta", replace
}

cd "C:\Users\User\OneDrive - Universitat Jaume I\Economía\Beca Colaboración\Stata\Markups3"

fs mkp_est_s*.dta

append using `r(files)'

save "data_markupscobdatrilagmlpacf.dta", replace




use "$Pthout/Markups3/data.dta", clear
levelsof nace2, local(nace2_values)
foreach s in `nace2_values' {
    use "$Pthout/Markups3/data.dta" if nace2 == `s', clear

    xtset unique_id time
    qui prodest log_go, free(log_m log_bill) proxy(log_lag_m) state(log_k_pim) met(op) acf reps(3) id(unique_id) t(time) fsres(tempeps_cd) 
    qui replace eps_cd = tempeps_cd if indcode == `s'
    qui drop tempeps_cd
    qui replace elast_m = _b[log_m] if indcode == `s' & eps_cd ~= .    
    replace elast_l = _b[log_bill]
    replace elast_k = _b[log_k_pim]
    g markup = elast_m * (1/exp(eps_cd)) * (go/m) if eps_cd ~= . 

    save "$Pthout/Markups3/mkp_est_s`s'.dta", replace
}

cd "C:\Users\User\OneDrive - Universitat Jaume I\Economía\Beca Colaboración\Stata\Markups3"

fs mkp_est_s*.dta

append using `r(files)'

save "data_markupscobdlagmopacf.dta", replace



use "$Pthout/Markups3/data.dta", clear
levelsof nace2, local(nace2_values)
foreach s in `nace2_values' {
    use "$Pthout/Markups3/data.dta" if nace2 == `s', clear

    xtset unique_id time
    qui prodest log_go, free(log_m log_bill) proxy(log_lag_m) state(log_k_pim) met(lp) acf reps(3) id(unique_id) t(time) fsres(tempeps_cd) 
    qui replace eps_cd = tempeps_cd if indcode == `s'
    qui drop tempeps_cd
    qui replace elast_m = _b[log_m] if indcode == `s' & eps_cd ~= .    
    replace elast_l = _b[log_bill]
    replace elast_k = _b[log_k_pim]
    g markup = elast_m * (1/exp(eps_cd)) * (go/m) if eps_cd ~= . 

    save "$Pthout/Markups3/mkp_est_s`s'.dta", replace
}

cd "C:\Users\User\OneDrive - Universitat Jaume I\Economía\Beca Colaboración\Stata\Markups3"

fs mkp_est_s*.dta

append using `r(files)'

save "data_markupscobdlagmlpacf.dta", replace



use "$Pthout/Markups3/data.dta", clear
levelsof nace2, local(nace2_values)
foreach s in `nace2_values' {
    use "$Pthout/Markups3/data.dta" if nace2 == `s', clear

    xtset unique_id time
    qui prodest log_go, free(log_m log_bill) proxy(log_lag_m) state(log_k_pim) met(op) reps(3) id(unique_id) t(time) fsres(tempeps_cd) 
    qui replace eps_cd = tempeps_cd if indcode == `s'
    qui drop tempeps_cd
    qui replace elast_m = _b[log_m] if indcode == `s' & eps_cd ~= .    
    replace elast_l = _b[log_bill]
    replace elast_k = _b[log_k_pim]
    g markup = elast_m * (1/exp(eps_cd)) * (go/m) if eps_cd ~= . 

    save "$Pthout/Markups3/mkp_est_s`s'.dta", replace
}

cd "C:\Users\User\OneDrive - Universitat Jaume I\Economía\Beca Colaboración\Stata\Markups3"

fs mkp_est_s*.dta

append using `r(files)'

save "data_markupscobdlagmop.dta", replace



use "$Pthout/Markups3/data.dta", clear
levelsof nace2, local(nace2_values)
foreach s in `nace2_values' {
    use "$Pthout/Markups3/data.dta" if nace2 == `s', clear

    xtset unique_id time
    qui prodest log_go, free(log_m log_bill) proxy(log_inv) state(log_k_pim) met(op) reps(3) id(unique_id) t(time) fsres(tempeps_cd) 
    qui replace eps_cd = tempeps_cd if indcode == `s'
    qui drop tempeps_cd
    qui replace elast_m = _b[log_m] if indcode == `s' & eps_cd ~= .    
    replace elast_l = _b[log_bill]
    replace elast_k = _b[log_k_pim]
    g markup = elast_m * (1/exp(eps_cd)) * (go/m) if eps_cd ~= . 

    save "$Pthout/Markups3/mkp_est_s`s'.dta", replace
}

cd "C:\Users\User\OneDrive - Universitat Jaume I\Economía\Beca Colaboración\Stata\Markups3"

fs mkp_est_s*.dta

append using `r(files)'

save "data_markupscobdinvop.dta", replace


use "$Pthout/Markups3/data.dta", clear
levelsof nace2, local(nace2_values)
foreach s in `nace2_values' {
    use "$Pthout/Markups3/data.dta" if nace2 == `s', clear

    xtset unique_id time
    qui prodest log_go, free(log_m log_bill) proxy(log_inv) state(log_k_pim) met(op) acf reps(3) id(unique_id) t(time) fsres(tempeps_cd) 
    qui replace eps_cd = tempeps_cd if indcode == `s'
    qui drop tempeps_cd
    qui replace elast_m = _b[log_m] if indcode == `s' & eps_cd ~= .    
    replace elast_l = _b[log_bill]
    replace elast_k = _b[log_k_pim]
    g markup = elast_m * (1/exp(eps_cd)) * (go/m) if eps_cd ~= . 

    save "$Pthout/Markups3/mkp_est_s`s'.dta", replace
}

cd "C:\Users\User\OneDrive - Universitat Jaume I\Economía\Beca Colaboración\Stata\Markups3"

fs mkp_est_s*.dta

append using `r(files)'

save "data_markupscobdinvopacf.dta", replace
